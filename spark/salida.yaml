[debug] Created tunnel using local port: '41723'

[debug] SERVER: "127.0.0.1:41723"

[debug] Original chart version: ""
[debug] CHART PATH: /home/rafa/temp/charts/bitnami_charts/bitnami/spark

NAME:   zooming-monkey
REVISION: 1
RELEASED: Wed Aug  7 11:02:42 2019
CHART: spark-1.0.1
USER-SUPPLIED VALUES:
image:
  pullPolicy: IfNotPresent
  registry: docker.io
  repository: bitnami/spark
  tag: 2.4.3-debian-9-r27
ingress:
  annotations: null
  certManager: false
  enabled: true
  hosts:
  - name: spark.local
    path: /
master:
  affinity: {}
  clusterPort: 7077
  debug: false
  livenessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 180
    periodSeconds: 20
    successThreshold: 1
    timeoutSeconds: 5
  nodeSelector: {}
  readinessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  resources: null
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  tolerations: []
  webPort: 8080
security:
  rpc:
    authenticationEnabled: true
    encryptionEnabled: true
  ssl:
    enabled: true
    needClientAuth: true
    protocol: TLSv1.2
  storageEncryptionEnabled: true
service:
  annotations: null
  clusterPort: 7077
  type: ClusterIP
  webPort: 80
worker:
  affinity: {}
  autoscaling:
    enabled: true
    resource: null
  debug: false
  livenessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 180
    periodSeconds: 20
    successThreshold: 1
    timeoutSeconds: 5
  nodeSelector: {}
  readinessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  replicaCount: 2
  replicasMax: 2
  resources: null
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  tolerations: []
  webPort: 8081

COMPUTED VALUES:
image:
  pullPolicy: IfNotPresent
  registry: docker.io
  repository: bitnami/spark
  tag: 2.4.3-debian-9-r27
ingress:
  annotations: null
  certManager: false
  enabled: true
  hosts:
  - name: spark.local
    path: /
master:
  affinity: {}
  clusterPort: 7077
  debug: false
  livenessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 180
    periodSeconds: 20
    successThreshold: 1
    timeoutSeconds: 5
  nodeSelector: {}
  readinessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  resources: null
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  tolerations: []
  webPort: 8080
security:
  rpc:
    authenticationEnabled: true
    encryptionEnabled: true
  ssl:
    enabled: true
    needClientAuth: true
    protocol: TLSv1.2
  storageEncryptionEnabled: true
service:
  annotations: null
  clusterPort: 7077
  type: ClusterIP
  webPort: 80
worker:
  affinity: {}
  autoscaling:
    enabled: true
    resource: null
  debug: false
  livenessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 180
    periodSeconds: 20
    successThreshold: 1
    timeoutSeconds: 5
  nodeSelector: {}
  readinessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  replicaCount: 2
  replicasMax: 2
  resources: null
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  tolerations: []
  webPort: 8081

HOOKS:
MANIFEST:

---
# Source: spark/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: zooming-monkey-spark-secret
  labels:
    app.kubernetes.io/name: spark
    helm.sh/chart: spark-1.0.1
    app.kubernetes.io/instance: zooming-monkey
    app.kubernetes.io/managed-by: Tiller
type: Opaque
data:
---
# Source: spark/templates/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: zooming-monkey-spark-headless
  labels:
    app.kubernetes.io/name: spark
    helm.sh/chart: spark-1.0.1
    app.kubernetes.io/instance: zooming-monkey
    app.kubernetes.io/managed-by: Tiller
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/name: spark
    release: "zooming-monkey"
---
# Source: spark/templates/svc-master.yaml
apiVersion: v1
kind: Service
metadata:
  name: zooming-monkey-spark-master-svc
  labels:
    app.kubernetes.io/name: spark
    helm.sh/chart: spark-1.0.1
    app.kubernetes.io/instance: zooming-monkey
    app.kubernetes.io/managed-by: Tiller
  annotations:
spec:
  type: ClusterIP
  ports:
  - port: 7077
    targetPort: cluster
    name: cluster
  - port: 80
    targetPort: http
    name: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: spark
    app.kubernetes.io/instance: zooming-monkey
    app.kubernetes.io/component: master
---
# Source: spark/templates/statefulset-master.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zooming-monkey-spark-master
  labels:
    app.kubernetes.io/name: spark
    helm.sh/chart: spark-1.0.1
    app.kubernetes.io/instance: zooming-monkey
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/component: master
spec:
  serviceName: zooming-monkey-spark-headless
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: spark
      app.kubernetes.io/instance: zooming-monkey
      app.kubernetes.io/component: master
  template:
    metadata:
      labels:
        app.kubernetes.io/name: spark
        app.kubernetes.io/instance: zooming-monkey
        helm.sh/chart: spark-1.0.1
        app.kubernetes.io/component: master
    spec:
      
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      containers:
        - name: spark-master
          image: "docker.io/bitnami/spark:2.4.3-debian-9-r27"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: cluster
              containerPort: 7077
          volumeMounts:
          env:
          - name: SPARK_MODE
            value: "master"
          - name: SPARK_DAEMON_MEMORY
            value: 
          - name: SPARK_MASTER_PORT
            value: "7077"
          - name: SPARK_MASTER_WEBUI_PORT
            value: "8080"
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 180
            periodSeconds: 20
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            null
            
      volumes:
---
# Source: spark/templates/statefulset-worker.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zooming-monkey-spark-worker
  labels:
    app.kubernetes.io/name: spark
    helm.sh/chart: spark-1.0.1
    app.kubernetes.io/instance: zooming-monkey
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/component: worker
spec:
  serviceName: zooming-monkey-spark-headless
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: spark
      app.kubernetes.io/instance: zooming-monkey
      app.kubernetes.io/component: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: spark
        app.kubernetes.io/instance: zooming-monkey
        helm.sh/chart: spark-1.0.1
        app.kubernetes.io/component: worker
    spec:
      
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      containers:
        - name: spark-worker
          image: "docker.io/bitnami/spark:2.4.3-debian-9-r27"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          volumeMounts:
          env:
          - name: SPARK_MODE
            value: "worker"
          - name: SPARK_DAEMON_MEMORY
            value: 
          ## There are some environment variables whose existence needs
          ## to be checked because Spark checks if they are null instead of an
          ## empty string
          - name: SPARK_WORKER_WEBUI_PORT
            value: "8081"
          - name: SPARK_DAEMON_JAVA_OPTS
            value: 
          - name: SPARK_MASTER_URL
            value: spark://zooming-monkey-spark-master-svc:7077
          # If you use a custom properties file, it must be loaded using a ConfigMap
          - name: SPARK_WORKER_OPTS
            value: 
          livenessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 180
            periodSeconds: 20
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            null
            
      volumes:
---
# Source: spark/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: zooming-monkey-spark-ingress
  labels:
    app.kubernetes.io/name: spark
    helm.sh/chart: spark-1.0.1
    app.kubernetes.io/instance: "zooming-monkey"
    app.kubernetes.io/managed-by: "Tiller"
    app.kubernetes.io/component: ingress
  annotations:
spec:
  rules:
  - host: spark.local
    http:
      paths:
      - path: /
        backend:
          serviceName: zooming-monkey-spark-master-svc
          servicePort: http
---
# Source: spark/templates/hpa-worker.yaml
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app.kubernetes.io/name: spark
    helm.sh/chart: spark-1.0.1
    app.kubernetes.io/instance: "zooming-monkey"
    app.kubernetes.io/managed-by: "Tiller"
    app.kubernetes.io/component: worker-autoscaler
  name: zooming-monkey-spark-autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: statefulset
    name: zooming-monkey-spark-worker
  minReplicas: 2
  maxReplicas: 2
  metrics:
  - type: Resource
    resource:
      null
